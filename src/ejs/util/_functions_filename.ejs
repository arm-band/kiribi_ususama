<%
//ファイル名を各ページのidとして設定する
funcFileNameId = (filename, fnProcedure) => {
    let id = ""
    id = fnProcedure[1].slice(fnProcedure[1].lastIndexOf(fnProcedure[0]) + 1).replace(/\.ejs/g, "") //PC内の絶対パスで最後の\の位置+1(=パスなしファイル名)から末尾までの文字列を切り取り、".ejs"の4文字を取り除く=拡張子なしのファイル名
    return id
}
//ファイル名からパスの深さを測り、その値に応じた相対パスを返す
funcFileNamePath = (filename, fnProcedure, id) => {
    let path = ""
    let depth = 0
    //news.ejsとarticle.ejsだけは固定割り振りする
    //news.ejs: 1
    //article.ejs: 2
    if(id === "news") {
        depth = 1
    }
    else if(id === "article") {
        depth = 2
    }
    else {
        depth = fnProcedure[1].split(`src${fnProcedure[0]}ejs`)[1].split(fnProcedure[0]).length - 2
    }
    //相対パスを生成
    if(depth > 0) {
        path = "../".repeat(depth)
    }
    else {
        path = "./"
    }
    return path
}
//ファイル名からナビゲーションバーのパスを返す
funcNavPath = (relPath, id) => {
    let navPath = relPath
    if(id === 'index') {
        navPath = ''
    }
    return navPath
}
//ファイル名を各ページのidとして設定する
funcFileNameProcedure = (filename) => {
    let array = []
    array.push("/")
    array.push(filename.replace(/\\/g, "/"))
     return array
}
%>