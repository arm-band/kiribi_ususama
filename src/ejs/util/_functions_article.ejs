<%
//記事ページのURLを生成
funcArticleUrl = (url, attributes) => {
    let urlTitle = attributes.url;
    urlTitle = urlTitle.replace(/\./g, "_");
    const datetime = funcDateTimeFormat(attributes.date, "", "ymd");
    const fileUrl = `${urlTitle}-${datetime}`;
    const articleIdUrl = `${url}news/articles/${fileUrl}.html`;
    return articleIdUrl;
}
//記事中のimg srcパスやa hrefパスに相対パスを追加
funcURLConverter = (content, relPath) => {
    //replaceの条件を正規表現で行っている。通常このやり方では後方参照は対応していないので、無名関数をコールバックにすることで後方参照を使用可能にした。
    //replaceのコールバックとして使用する無名関数の中ではRegExp.$1の他、argumentsも使用できる。RegExp.$1では最終マッチ文字列になってしまったが、arguments[0]は都度の文字列が入っているためそちらで対応
    return content.replace(/(src=\"|href=\")(?!(http(s)?:)?\/\/)/gim, function() {
        return `${arguments[0]}${relPath}`
    });
}
%>